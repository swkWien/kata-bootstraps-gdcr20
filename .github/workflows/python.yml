name: Python CI

on:
  push:
    paths:
      - 'python/**'
      - '.github/workflows/python**'
  pull_request:
    paths:
      - 'python/**'
      - '.github/workflows/python**'

  schedule:
    # weekly build every FRI
    - cron: "0 6 * * 5"

jobs:
  matrix_build:
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 4
      matrix:
        os: [ ubuntu-latest, macos-latest,  windows-latest ]
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10']
        exclude:
          - os: macos-latest
            python-version: '3.6'
          - os: windows-latest
            python-version: '3.6'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      #### BEGIN pytest
      - name: Install dependencies
        working-directory: python/pytest
        run: |
          python -m pip install --upgrade pip
      - name: Lint with flake8
        working-directory: python/pytest
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        working-directory: python/pytest
        run: |
          pip install -r requirements.txt
          python -m pytest -k test_correct_greeting

      - name: assure one failing test
        working-directory: python/pytest
        run: "sh ../../.scripts/assure_failing_test.sh 'python -m pytest tests/test_thing_fixture.py' 'AssertionError: assert'"

      #### END pytest

      #### BEGIN codewars
      - name: Test with codewars
        working-directory: python/codewars
        run: |
          pip install -r requirements.txt
          python tests/example.py
      #### END codewars


  docker_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      #### BEGIN pytest
      - name: docker pytest
        working-directory: python/pytest
        run: "sh ../../.scripts/assure_failing_test.sh './docker_test.sh' 'AssertionError: assert'"
      #### END pytest
